{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import { valid, compare } from 'semver';\nimport { exec } from 'child_process';\n\nconst lsRemoteTags = (repo: string): Promise<string> => new Promise(\n\t(resolve, reject) => {\n\t\texec(`git ls-remote --tags ${repo}`, (_, stdout, stderr) => {\n\t\t\tif (stderr) reject(new Error(stderr));\n\t\t\tresolve(stdout.toString().trim());\n\t\t});\n\t},\n);\n\nconst parseTags = (tags: string): Map<string, string> => {\n\tconst tagMap = new Map();\n\ttags.split('\\n')\n\t\t.forEach((str) => {\n\t\t\tconst ref = str.split(/\\t/);\n\t\t\ttagMap.set(ref[1].split('/')[2].replace(/\\^\\{\\}$/, ''), ref[0]);\n\t\t});\n\treturn new Map(\n\t\t[...tagMap.entries()]\n\t\t\t.filter((arr) => valid(arr[0]))\n\t\t\t.sort((a, b) => compare(a[0], b[0]))\n\t\t\t.reverse(),\n\t);\n};\n\nexport const get = async (repo: string): Promise<Map<string, string>> => {\n\tconst tags = await lsRemoteTags(repo);\n\treturn parseTags(tags);\n};\n\nexport const latest = async (repo: string): Promise<[string, string]> => {\n\tconst tags = await get(repo);\n\treturn tags.entries().next().value as [string, string];\n};\n\nmodule.exports = { get, latest };\n"],"names":["exports","get","repo","tags","tagMap","Map","split","forEach","str","ref","set","replace","entries","filter","arr","semver_1","sort","a","b","reverse","parseTags","Promise","resolve","reject","child_process_1","_","stdout","stderr","Error","toString","trim","lsRemoteTags","latest","next","value","module"],"mappings":"8KA2BaA,QAAAC,IAAaC,iDAEzB,MAjBiB,CAACC,IAClB,MAAMC,EAAS,IAAIC,IAMnB,OALAF,EAAKG,MAAM,MACTC,QAASC,IACT,MAAMC,EAAMD,EAAIF,MAAM,MACtBF,EAAOM,IAAID,EAAI,GAAGH,MAAM,KAAK,GAAGK,QAAQ,UAAW,IAAKF,EAAI,MAEvD,IAAIJ,IACV,IAAID,EAAOQ,WACTC,OAAQC,GAAQC,QAAMD,EAAI,KAC1BE,KAAK,CAACC,EAAGC,IAAMH,UAAQE,EAAE,GAAIC,EAAE,KAC/BC,YAMIC,MA1Ba,CAAClB,GAAkC,IAAImB,QAC3D,CAACC,EAASC,KACTC,OAAK,wBAAwBtB,EAAQ,CAACuB,EAAGC,EAAQC,KAC5CA,GAAQJ,EAAO,IAAIK,MAAMD,IAC7BL,EAAQI,EAAOG,WAAWC,YAqBTC,CAAa7B,OAIpBF,QAAAgC,OAAgB9B,iDAE5B,aADmBF,YAAIE,IACXU,UAAUqB,OAAOC,SAG9BC,OAAOnC,QAAU,CAAEC,IAAAD,YAAKgC,OAAAhC"}